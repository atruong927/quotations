@model IEnumerable<QuotationsApp.Models.Quotation>

@{
    ViewBag.Title = "Quotes";
}

<h2>"Quotations"</h2>

<p>
    @Html.ActionLink("Create New Quote", "Create", null, new { @class = "btn btn-primary"})
</p>
@using (Html.BeginForm("Index", "Quotations", FormMethod.Get))
{
    @Html.TextBox("input");
    <input type="submit" value="Search" class="btn btn-info" />
}
@using (Html.BeginForm("Index", "Quotations", FormMethod.Get))
{
    <input type="submit" value="Display All" class="btn btn-success" />
}
@using GridMvc.Html
@Html.Grid(Model).Columns(columns =>
{
    columns.Add(quote => quote.Quote);
    columns.Add(quote => quote.Author).SetWidth(150).Sortable(true);
    columns.Add(quote => quote.Category.Name).Titled("Category").Sortable(true);
    columns.Add(quote => quote.DateAdded).Titled("Date Added").SetWidth(100).Format("{0:d}").Sortable(true);
    columns.Add().Encoded(false).Sanitized(false).RenderValueAs(item => @Html.ActionLink("Edit", "Edit", new { id = item.QuotationID }, new { @class = "btn btn-warning" }));
    columns.Add().Encoded(false).Sanitized(false).RenderValueAs(item => @Html.ActionLink("Details", "Details", new { id = item.QuotationID }, new { @class = "btn btn-info" }));
    columns.Add().Encoded(false).Sanitized(false).RenderValueAs(item => @Html.ActionLink("Delete", "Delete", new { id = item.QuotationID }, new { @class = "btn btn-danger" }));
})

@*<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Category.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Author)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Quote)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DateAdded)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Category.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Author)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Quote)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.DateAdded)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.QuotationID }, new { @class = "btn btn-warning" })
            @Html.ActionLink("Details", "Details", new { id=item.QuotationID }, new { @class = "btn btn-info" })
            @Html.ActionLink("Delete", "Delete", new { id=item.QuotationID }, new { @class = "btn btn-danger" })
        </td>
    </tr>
}*@

</table>
